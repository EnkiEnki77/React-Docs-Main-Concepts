{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EnkiE\\\\Documents\\\\builds\\\\react-docs-main-concepts\\\\src\\\\components\\\\Comment.js\";\nimport Avatar from './Avatar';\nimport CommentDate from './CommentDate';\nimport CommentText from './CommentText';\nimport UserInfo from './UserInfo';\n\n// If a component becomes too nested it can become less reusable. Each component should only encapsulate one responsibilty, if you\n// have a component containing multiple responsibilites those responsibilites should be broken down into individual components.\n// This makes the bigger component much more reusable/customizable. As well as gives you the option to use these pieces in other \n// places throughout the app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Avatar\",\n        src: props.author.avatarUrl,\n        alt: props.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"UserInfo-name\",\n        children: props.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Comment-text\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Comment-date\",\n      children: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n\n//Makes components much more readable, just make sure youre giving your components names that are descriptive of what they are.\n_c = Comment;\nfunction ExtractedComment(props) {\n  // props are read only. No matter what a components must never modify its own props. Because Components are meant to be pure \n  // functions. A pure function is a function that if given the same inputs will always return the same value. \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Comment\",\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      author: props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n      text: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentDate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_c2 = ExtractedComment;\nexport default Comment;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"ExtractedComment\");","map":{"version":3,"names":["Avatar","CommentDate","CommentText","UserInfo","Comment","props","author","avatarUrl","name","text","date","ExtractedComment"],"sources":["C:/Users/EnkiE/Documents/builds/react-docs-main-concepts/src/components/Comment.js"],"sourcesContent":["\r\nimport Avatar from './Avatar';\r\nimport CommentDate from './CommentDate';\r\nimport CommentText from './CommentText';\r\nimport UserInfo from './UserInfo';\r\n\r\n// If a component becomes too nested it can become less reusable. Each component should only encapsulate one responsibilty, if you\r\n// have a component containing multiple responsibilites those responsibilites should be broken down into individual components.\r\n// This makes the bigger component much more reusable/customizable. As well as gives you the option to use these pieces in other \r\n// places throughout the app\r\nfunction Comment(props) {\r\n    return (\r\n      <div className=\"Comment\">\r\n        <div className=\"UserInfo\">\r\n          <img className=\"Avatar\"\r\n            src={props.author.avatarUrl}\r\n            alt={props.author.name}\r\n          />\r\n          <div className=\"UserInfo-name\">\r\n            {props.author.name}\r\n          </div>\r\n        </div>\r\n        <div className=\"Comment-text\">\r\n          {props.text}\r\n        </div>\r\n        <div className=\"Comment-date\">\r\n          {props.date}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  //Makes components much more readable, just make sure youre giving your components names that are descriptive of what they are.\r\n  function ExtractedComment(props) {\r\n    // props are read only. No matter what a components must never modify its own props. Because Components are meant to be pure \r\n    // functions. A pure function is a function that if given the same inputs will always return the same value. \r\n    return (\r\n      <div className=\"Comment\">\r\n        <UserInfo author={props.author}/>\r\n        <CommentText text={props.text}/>\r\n        <CommentDate/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Comment"],"mappings":";AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AAAA;AACA,SAASC,OAAO,CAACC,KAAK,EAAE;EACpB,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QAAK,SAAS,EAAC,QAAQ;QACrB,GAAG,EAAEA,KAAK,CAACC,MAAM,CAACC,SAAU;QAC5B,GAAG,EAAEF,KAAK,CAACC,MAAM,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAK,SAAS,EAAC,eAAe;QAAA,UAC3BH,KAAK,CAACC,MAAM,CAACE;MAAI;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,UAC1BH,KAAK,CAACI;IAAI;MAAA;MAAA;MAAA;IAAA,QACP,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,UAC1BJ,KAAK,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;;AAGA;AAAA,KAvBON,OAAO;AAwBd,SAASO,gBAAgB,CAACN,KAAK,EAAE;EAC/B;EACA;EACA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB,QAAC,QAAQ;MAAC,MAAM,EAAEA,KAAK,CAACC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC,QAAC,WAAW;MAAC,IAAI,EAAED,KAAK,CAACI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAChC,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,MAVQE,gBAAgB;AAYzB,eAAeP,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}