{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EnkiE\\\\Documents\\\\builds\\\\react-docs-main-concepts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ElementComponent from './Element';\nimport Welcome from './Welcome';\n\n// Components allow you to split the UI up into independent, reusable pieces in which you can think about in isolation based on their\n// functionality/purpose within the application. They can be seen as functions that take in arbitrary inputs called props, and return\n// React elements that describe the UI. They can also be used to define the UI logic for those elements. There are two kinds of components.\n\n// This is a React functional component.\n// This function is a valid component, because it takes an optional props object input, and returns a single React element. Components\n// can only return one element, so any additional elements youd like that component to encapsulate should be children.  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ElementComponent, {\n      name: \"Sara\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I am a child of the ElementComponent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Welcome, {\n      name: \"Bob\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Welcome, {\n      name: \"Snowy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Welcome, {\n      name: \"Enki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// This is a React class component.\n// class based components are similar to function components in that they take in a props object input, return a React element.\n// props are recieved through the class constructor, and elements are returned from a render() method.\n_c = App;\nclass ClassApp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"class App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// This is how you export things such as components as modules to be imported in other files. export default can only take one thing\n// it makes it the primary module of the file. export can take as many things as youd like, but they must be destructured from the\n// file on import. \nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","ElementComponent","Welcome","App","props","ClassApp","constructor","render"],"sources":["C:/Users/EnkiE/Documents/builds/react-docs-main-concepts/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css'\r\nimport ElementComponent from './Element'\r\nimport Welcome from './Welcome'\r\n\r\n// Components allow you to split the UI up into independent, reusable pieces in which you can think about in isolation based on their\r\n// functionality/purpose within the application. They can be seen as functions that take in arbitrary inputs called props, and return\r\n// React elements that describe the UI. They can also be used to define the UI logic for those elements. There are two kinds of components.\r\n\r\n// This is a React functional component.\r\n// This function is a valid component, because it takes an optional props object input, and returns a single React element. Components\r\n// can only return one element, so any additional elements youd like that component to encapsulate should be children.  \r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"App\">\r\n        {/* Because Components are functions that return elements they can be imported to other files, and utilized as JSx the same way\r\n        an element can be, because on compilation they are just the returned element, containing any of the state/props logic embedded\r\n        into them. */}\r\n        {/* When React sees an element representing a component it passes JSX attributes and children to this component as an object \r\n        This object is called props*/}\r\n        {/* Elements that represent a component must be capitalized, otherwise they are treated as DOM tags. They component they\r\n        represent must also be imported/in scope. */}\r\n        <ElementComponent name='Sara'>\r\n            <h2>I am a child of the ElementComponent</h2>\r\n        </ElementComponent>\r\n\r\n        <Welcome name='Bob'/>\r\n        <Welcome name='Snowy'/>\r\n        <Welcome name='Enki'/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n// This is a React class component.\r\n// class based components are similar to function components in that they take in a props object input, return a React element.\r\n// props are recieved through the class constructor, and elements are returned from a render() method.\r\nclass ClassApp extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                class App \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// This is how you export things such as components as modules to be imported in other files. export default can only take one thing\r\n// it makes it the primary module of the file. export can take as many things as youd like, but they must be destructured from the\r\n// file on import. \r\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,gBAAgB,MAAM,WAAW;AACxC,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA,MAAMC,GAAG,GAAIC,KAAK,IAAK;EACrB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAQhB,QAAC,gBAAgB;MAAC,IAAI,EAAC,MAAM;MAAA,uBACzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA6C;MAAA;MAAA;MAAA;IAAA,QAC9B,eAEnB,QAAC,OAAO;MAAC,IAAI,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eACrB,QAAC,OAAO;MAAC,IAAI,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACvB,QAAC,OAAO;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV,CAAC;;AAGD;AACA;AACA;AAAA,KAxBMD,GAAG;AAyBT,MAAME,QAAQ,SAASN,KAAK,CAACC,SAAS,CAAC;EACnCM,WAAW,CAACF,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;EAChB;EAEAG,MAAM,GAAE;IACJ,oBACI;MAAK,SAAS,EAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEd;EAEd;AACJ;;AAEA;AACA;AACA;AACA,eAAeJ,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}